18. Simple Tic-Tac-Toe Game
using System;

class TicTacToe
{
    static char[] board = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' };
    static int player = 1; // Player 1 starts
    static int choice; // User choice for position
    static int flag = 0; // 1: someone has won, -1: draw, 0: still running

    static void Main()
    {
        Console.WriteLine("Tic-Tac-Toe Game!");

        do
        {
            Console.Clear();
            Console.WriteLine("Player 1: X and Player 2: O");
            Console.WriteLine("Player 1's turn");

            Console.WriteLine("Enter a number (1-9) to mark your move: ");
            choice = Convert.ToInt32(Console.ReadLine());

            // Mark the position
            if (player == 1)
            {
                board[choice] = 'X';
                player = 2;
            }
            else
            {
                board[choice] = 'O';
                player = 1;
            }
            flag = CheckWin();

        } while (flag != 1 && flag != -1);

        Console.Clear();
        Console.WriteLine("Game Over!");
        Console.ReadLine();
    }

    static int CheckWin()
    {
        #region Horzontal Winning Condition
        // Winning Condition Check
        if (board[1] == board[2] && board[2] == board[3]) return 1;
        if (board[4] == board[5] && board[5] == board[6]) return 1;
        if (board[7] == board[8] && board[8] == board[9]) return 1;
        #endregion

        #region Vertical Winning Condition
        if (board[1] == board[4] && board[4] == board[7]) return 1;
        if (board[2] == board[5] && board[5] == board[8]) return 1;
        if (board[3] == board[6] && board[6] == board[9]) return 1;
        #endregion

        #region Diagonal Winning Condition
        if (board[1] == board[5] && board[5] == board[9]) return 1;
        if (board[3] == board[5] && board[5] == board[7]) return 1;
        #endregion

        #region Check for Draw
        // If all spots are filled and no winner
        if (Array.Exists(board, element => element == '1' || element == '2' || element == '3' ||
                                           element == '4' || element == '5' || element == '6' ||
                                           element == '7' || element == '8' || element == '9')) return -1;
        #endregion

        return 0;
    }
}
